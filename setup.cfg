[mypy]
# 要求所有函数都必须有类型注解
disallow_untyped_defs = True
# 例如这样会报错：
# def hello(name):  # Error: Function is missing type annotations
#     print(f"Hello {name}")
# 正确写法：def hello(name: str) -> None:

# 检查没有类型注解的函数的主体
check_untyped_defs = True
# 即使函数没有类型注解，也会检查函数体内的类型使用

# 使 None 检查更严格
strict_optional = false
# 例如：
# x: str = None  # Error: Incompatible types in assignment
# 必须使用 Optional: x: Optional[str] = None

# 当函数返回 Any 类型时发出警告
warn_return_any = True
# 帮助发现可能未指定具体返回类型的情况

# 警告未使用的 "type: ignore" 注释
warn_unused_ignores = True
# 帮助清理不再需要的类型忽略注释

# 警告不必要的类型转换
warn_redundant_casts = True
# 例如：str(x) 当 x 已经是字符串时会警告

# 警告mypy配置文件中未使用的配置项
warn_unused_configs = True
# 帮助维护干净的配置文件

